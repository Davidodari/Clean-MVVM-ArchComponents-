/**
 *
 * Copyright 2020 David Odari
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *          http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *
 **/
plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
    id ("com.hiya.jacoco-android")
    id("com.mikepenz.aboutlibraries.plugin")
    id("com.google.firebase.crashlytics")
}

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

jacocoAndroidUnitTestReport {
    xml.enabled true
}

//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildTools

//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    defaultConfig {
        applicationId "com.k0d4black.theforce"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion targetSdk
        versionCode versionCodeMajor * 10000 + versionCodeMinor * 100 + versionCodePatch
        versionName versionName
        testInstrumentationRunner "com.k0d4black.theforce.runner.MockTestRunner"
    }
    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsEnabled: true]
//            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            manifestPlaceholders = [crashlyticsEnabled: false]
            testCoverageEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    dataBinding {
        enabled true
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    //Local Libs
    implementation project(':domain')
    implementation project(':data-local')
    implementation project(':data-remote')

    //Jetpack
    implementation appDependencies.appCompat
    implementation appDependencies.androidxKtx
    implementation appDependencies.constraintLayout
    implementation appDependencies.supportV4
    implementation appDependencies.fragmentKtx
    implementation appDependencies.lifecycleExtensions

    //Material
    implementation appDependencies.material

    //Firebase
    implementation appDependencies.firebaseAnalytics
    implementation appDependencies.firebaseCrashlytics

    //Stetho
    implementation appDependencies.stetho

    //Animations
    implementation appDependencies.recyclerviewAnimations

    //Memory leaks
    debugImplementation appDependencies.leakCanary

    //About Libraries
    implementation appDependencies.aboutLibraryCore
    implementation appDependencies.aboutLibraryUi

    // kiel
    implementation appDependencies.kiel

    // Koin
    implementation appDependencies.koinAndroid
    implementation appDependencies.koinAndroidViewModel

    //Test Libs
    testImplementation testDependencies.junit
    testImplementation testDependencies.robolectric
    testImplementation testDependencies.androidxJunit
    testImplementation testDependencies.espressoCore
    testImplementation testDependencies.runner
    testImplementation testDependencies.rules
    testImplementation testDependencies.googleTruth
    testImplementation testDependencies.archComponentTest
    testImplementation testDependencies.coroutinesTest
    testImplementation testDependencies.koinTest
    androidTestImplementation testDependencies.espressoCore
    androidTestImplementation testDependencies.runner
    androidTestImplementation testDependencies.rules
    androidTestImplementation testDependencies.androidxJunit
    androidTestImplementation testDependencies.androidxCoreTest
    androidTestImplementation testDependencies.mockWebServer
    androidTestImplementation testDependencies.espressoContrib
    androidTestImplementation testDependencies.espressoIntents
    androidTestImplementation testDependencies.koinTest
    implementation testDependencies.espressoIdlingResource
}
apply plugin: 'com.google.gms.google-services'
